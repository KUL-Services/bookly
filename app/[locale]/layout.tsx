import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';
import { TranslationsProvider } from '@/bookly/providers';
import { PageProps } from '@/bookly/types';
import { ThemeProvider } from 'next-themes';
import { ThemeChanger } from '@/bookly/components/temporary';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: PageProps['params'];
}>) {
  const locale = (await params)?.locale ?? 'en';
  return (
    <html lang={locale} suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <TranslationsProvider locale={locale}>
          <ThemeProvider attribute='class' enableSystem>
            <ThemeChanger />
            {children}
          </ThemeProvider>
        </TranslationsProvider>
      </body>
    </html>
  );
}
